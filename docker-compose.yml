services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - '5173:5173'
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - VITE_HOSTNAME=${HOSTNAME}
      - VITE_API_BASE_URL=${BASE_URL}
    depends_on:
      - backend

  backend:
    container_name: djangoapp
    build: ./backend
    env_file:
      - .env
    ports:
      - '8000:8000'
    environment:
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - PG_DB=${PG_DB}
      - PG_PORT=${PG_PORT}
      - PG_HOST=${PG_HOST}
      - DJANGO_SUPERUSER_USERNAME=${DJANGO_SUPERUSER_USERNAME}
      - DJANGO_SUPERUSER_EMAIL=${DJANGO_SUPERUSER_EMAIL}
      - DJANGO_SUPERUSER_PASSWORD=${DJANGO_SUPERUSER_PASSWORD}
      - HOSTNAME=${HOSTNAME}

    volumes:
      - ./backend/media:/app/media
    depends_on:
      - db

  redis:
    image: 'redis:7.0.0'
    ports:
      - '6380:6379'

  db:
    container_name: db
    image: postgres:13
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - HOSTNAME=${HOSTNAME}
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data

  caddy:
    container_name: caddy
    build:
      context: .
      dockerfile: Dockerfile.caddy
    env_file:
      - .env
    ports:
      - '8443:443'
    volumes:
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - frontend
      - backend

volumes:
  pgdata: {}
  media: {}
  caddy_data: {}
  caddy_config: {}
